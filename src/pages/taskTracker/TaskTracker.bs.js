// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Header from "../Header/Header.bs.js";
import * as Js_math from "rescript/lib/es6/js_math.js";
import * as TodoItem from "../../components/TodoItem/TodoItem.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function TaskTracker(Props) {
  var useArray = function (arr) {
    var match = React.useState(function () {
          return arr;
        });
    var setItem = match[1];
    var item = match[0];
    var addArr = function (a) {
      Curry._1(setItem, (function (prev) {
              return prev.concat([a]);
            }));
    };
    var deleteItem = function (idx) {
      Curry._1(setItem, (function (prev) {
              return prev.splice(idx, 1);
            }));
    };
    var updateItem = function (id) {
      var tempArr = item.slice();
      Curry._1(setItem, (function (param) {
              return tempArr.map(function (i) {
                          if (i.id === id) {
                            return {
                                    id: i.id,
                                    check: !i.check,
                                    text: i.text
                                  };
                          } else {
                            return i;
                          }
                        });
            }));
    };
    return [
            item,
            addArr,
            deleteItem,
            updateItem
          ];
  };
  var match = useArray(TodoItem.defaultTodos);
  var updateItem = match[3];
  var deleteItem = match[2];
  var addItem = match[1];
  var match$1 = React.useState(function () {
        return [
                "a",
                "b",
                "c"
              ];
      });
  var match$2 = React.useState(function () {
        return "a";
      });
  var setIdx = match$2[1];
  var idx = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setValue = match$3[1];
  var value = match$3[0];
  return React.createElement("div", {
              className: "initBox "
            }, React.createElement(Header.make, {}), React.createElement("div", {
                  className: "iptbox"
                }, React.createElement("input", {
                      className: "ipt",
                      placeholder: "请输入待办事项！",
                      type: "text",
                      value: value,
                      onChange: (function ($$event) {
                          var value = $$event.target.value;
                          Curry._1(setValue, (function (param) {
                                  return value;
                                }));
                        })
                    }), React.createElement("button", {
                      className: "btn",
                      onClick: (function (param) {
                          if (value === "") {
                            console.log("请输入待办事项！！！");
                            return ;
                          }
                          Curry._1(addItem, {
                                id: String(Js_math.random_int(0, 1000000)),
                                check: false,
                                text: value
                              });
                          Curry._1(setValue, (function (param) {
                                  return "";
                                }));
                        })
                    }, "添加")), React.createElement("ul", {
                  className: "selectBox"
                }, match$1[0].map(function (item, i) {
                      if (item === "b") {
                        return React.createElement("li", {
                                    key: String(i),
                                    className: idx === "b" ? "active" : "",
                                    onClick: (function (param) {
                                        Curry._1(setIdx, (function (param) {
                                                return "b";
                                              }));
                                      })
                                  }, "已完成");
                      } else if (item === "c") {
                        return React.createElement("li", {
                                    key: String(i),
                                    className: idx === "c" ? "active" : "",
                                    onClick: (function (param) {
                                        Curry._1(setIdx, (function (param) {
                                                return "c";
                                              }));
                                      })
                                  }, "未完成");
                      } else {
                        return React.createElement("li", {
                                    key: String(i),
                                    className: idx === "a" ? "active" : "",
                                    onClick: (function (param) {
                                        Curry._1(setIdx, (function (param) {
                                                return "a";
                                              }));
                                      })
                                  }, "全部");
                      }
                    })), React.createElement("div", {
                  className: "content"
                }, Belt_Array.keep(match[0], (function (param) {
                          var check = param.check;
                          if (idx === "b") {
                            return check;
                          } else if (idx === "c") {
                            return !check;
                          } else {
                            return true;
                          }
                        })).map(function (item, i) {
                      return React.createElement(TodoItem.make, {
                                  item: item,
                                  deleteItem: deleteItem,
                                  updateItem: updateItem,
                                  i: i,
                                  key: item.id
                                });
                    })));
}

var make = TaskTracker;

export {
  make ,
}
/* react Not a pure module */
